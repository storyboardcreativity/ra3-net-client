<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\openssl.1.0.1.21\build\native\openssl.props" Condition="Exists('packages\openssl.1.0.1.21\build\native\openssl.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\src\auth_info.cpp" />
    <ClCompile Include="..\src\connection\connection.cpp" />
    <ClCompile Include="..\src\connection\enctypex_decoder.c" />
    <ClCompile Include="..\src\connection\gpcm.cpp" />
    <ClCompile Include="..\src\connection\master_server.cpp" />
    <ClCompile Include="..\src\connection\peerchat.cpp" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\cryptarc4.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\cryptmd2.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\cryptmd5.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\cryptrsa.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\cryptsha1.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\dirtylibps3.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\dirtymem.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\dirtynet.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\dirtynetps3.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\lobbybase64.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\platformsocketapi.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\protossl.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\socketapicallbacks.c" />
    <ClCompile Include="..\src\DirtySDKEAWebKit\string_tools.c" />
    <ClCompile Include="..\src\fesl.cpp" />
    <ClCompile Include="..\src\gamespy.cpp" />
    <ClCompile Include="..\src\main.cpp" />
    <ClCompile Include="..\src\peerchat_encryption.c" />
    <ClCompile Include="..\src\printing_tools.cpp" />
    <ClCompile Include="..\src\ra3_engine_tools\md5.cpp" />
    <ClCompile Include="..\src\ra3_engine_tools\ra3_engine_tools.cpp" />
    <ClCompile Include="..\src\terminal_printing_system.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{087AD3BE-03E4-4131-BEAB-6A001DFB4182}</ProjectGuid>
    <RootNamespace>ra3netclient</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IncludePath>$(SolutionDir)..\include;$(SolutionDir)..\src;$(IncludePath)</IncludePath>
    <Linkage-curl>
    </Linkage-curl>
    <Linkage-openssl>static</Linkage-openssl>
    <Linkage-zlib>static</Linkage-zlib>
    <Linkage-libssh2>static</Linkage-libssh2>
    <Linkage-pthreads>
    </Linkage-pthreads>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IncludePath>$(SolutionDir)..\include;$(SolutionDir)..\src;$(IncludePath)</IncludePath>
    <Linkage-curl>
    </Linkage-curl>
    <Linkage-openssl>static</Linkage-openssl>
    <Linkage-zlib>static</Linkage-zlib>
    <Linkage-libssh2>static</Linkage-libssh2>
    <Linkage-pthreads>
    </Linkage-pthreads>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(SolutionDir)..\include;$(SolutionDir)..\src;$(IncludePath)</IncludePath>
    <Linkage-curl>
    </Linkage-curl>
    <Linkage-openssl>static</Linkage-openssl>
    <Linkage-zlib>static</Linkage-zlib>
    <Linkage-libssh2>static</Linkage-libssh2>
    <Linkage-pthreads>
    </Linkage-pthreads>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(SolutionDir)..\include;$(SolutionDir)..\src;$(IncludePath)</IncludePath>
    <Linkage-curl>
    </Linkage-curl>
    <Linkage-openssl>static</Linkage-openssl>
    <Linkage-zlib>static</Linkage-zlib>
    <Linkage-libssh2>static</Linkage-libssh2>
    <Linkage-pthreads>
    </Linkage-pthreads>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)..\nana\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_MBCS;_HAS_AUTO_PTR_ETC=1;_WINSOCK_DEPRECATED_NO_WARNINGS;HAVE_STRUCT_TIMESPEC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <PreBuildEvent>
      <Command>git submodule update --init
copy /Y "$(SolutionDir)..\nana_fix\*" "$(SolutionDir)..\nana\build\vc2017\"
"$(DevEnvDir)devenv" "$(SolutionDir)..\nana\build\vc2017\nana.sln" /Build $(configuration)</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>SET build_path=$(SolutionDir)..\build
if not exist "%build_path%" mkdir "%build_path%"

copy /Y "$(OutDir)$(TargetName)$(TargetExt)" "%build_path%\"

if not exist "%build_path%\res" mkdir "%build_path%\res"
xcopy /e /k /h /i /y $(SolutionDir)..\res $(SolutionDir)..\build\res\</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)..\nana\build\bin;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>nana_$(PlatformToolset)_$(Configuration)_$(PlatformTarget).lib;Ws2_32.lib;$(SolutionDir)packages\pthreads.2.9.1.4\build\native\lib\v110\Win32\Debug\dynamic\cdecl\libpthread.lib;$(SolutionDir)packages\curl.7.30.0.2\build\native\lib\v110\Win32\Debug\dynamic\libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)..\nana\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_MBCS;_HAS_AUTO_PTR_ETC=1;_WINSOCK_DEPRECATED_NO_WARNINGS;HAVE_STRUCT_TIMESPEC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <PreBuildEvent>
      <Command>git submodule update --init
copy /Y "$(SolutionDir)..\nana_fix\*" "$(SolutionDir)..\nana\build\vc2017\"
"$(DevEnvDir)devenv" "$(SolutionDir)..\nana\build\vc2017\nana.sln" /Build $(configuration)</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>SET build_path=$(SolutionDir)..\build
if not exist "%build_path%" mkdir "%build_path%"

copy /Y "$(OutDir)$(TargetName)$(TargetExt)" "%build_path%\"

if not exist "%build_path%\res" mkdir "%build_path%\res"
xcopy /e /k /h /i /y $(SolutionDir)..\res $(SolutionDir)..\build\res\</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)..\nana\build\bin;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>nana_$(PlatformToolset)_$(Configuration)_$(PlatformTarget).lib;Ws2_32.lib;$(SolutionDir)packages\pthreads.2.9.1.4\build\native\lib\v110\x64\Debug\dynamic\cdecl\libpthread.lib;$(SolutionDir)packages\curl.7.30.0.2\build\native\lib\v110\x64\Debug\dynamic\libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)..\nana\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_MBCS;_HAS_AUTO_PTR_ETC=1;_WINSOCK_DEPRECATED_NO_WARNINGS;HAVE_STRUCT_TIMESPEC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>$(SolutionDir)..\nana\build\bin;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>nana_$(PlatformToolset)_$(Configuration)_$(PlatformTarget).lib;Ws2_32.lib;$(SolutionDir)packages\pthreads.2.9.1.4\build\native\lib\v110\Win32\Release\dynamic\cdecl\libpthread.lib;$(SolutionDir)packages\curl.7.30.0.2\build\native\lib\v110\Win32\Release\dynamic\libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PreBuildEvent>
      <Command>git submodule update --init
copy /Y "$(SolutionDir)..\nana_fix\*" "$(SolutionDir)..\nana\build\vc2017\"
"$(DevEnvDir)devenv" "$(SolutionDir)..\nana\build\vc2017\nana.sln" /Build $(configuration)</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>SET build_path=$(SolutionDir)..\build
if not exist "%build_path%" mkdir "%build_path%"

copy /Y "$(OutDir)$(TargetName)$(TargetExt)" "%build_path%\"

if not exist "%build_path%\res" mkdir "%build_path%\res"
xcopy /e /k /h /i /y $(SolutionDir)..\res $(SolutionDir)..\build\res\</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)..\nana\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_MBCS;_HAS_AUTO_PTR_ETC=1;_WINSOCK_DEPRECATED_NO_WARNINGS;HAVE_STRUCT_TIMESPEC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>$(SolutionDir)..\nana\build\bin;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>nana_$(PlatformToolset)_$(Configuration)_$(PlatformTarget).lib;Ws2_32.lib;$(SolutionDir)packages\pthreads.2.9.1.4\build\native\lib\v110\x64\Release\dynamic\cdecl\libpthread.lib;$(SolutionDir)packages\curl.7.30.0.2\build\native\lib\v110\x64\Release\dynamic\libcurl.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PreBuildEvent>
      <Command>git submodule update --init
copy /Y "$(SolutionDir)..\nana_fix\*" "$(SolutionDir)..\nana\build\vc2017\"
"$(DevEnvDir)devenv" "$(SolutionDir)..\nana\build\vc2017\nana.sln" /Build $(configuration)</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>SET build_path=$(SolutionDir)..\build
if not exist "%build_path%" mkdir "%build_path%"

copy /Y "$(OutDir)$(TargetName)$(TargetExt)" "%build_path%\"

if not exist "%build_path%\res" mkdir "%build_path%\res"
xcopy /e /k /h /i /y $(SolutionDir)..\res $(SolutionDir)..\build\res\</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\pthreads.redist.2.9.1.4\build\native\pthreads.redist.targets" Condition="Exists('packages\pthreads.redist.2.9.1.4\build\native\pthreads.redist.targets')" />
    <Import Project="packages\pthreads.2.9.1.4\build\native\pthreads.targets" Condition="Exists('packages\pthreads.2.9.1.4\build\native\pthreads.targets')" />
    <Import Project="packages\curl.redist.7.30.0.2\build\native\curl.redist.targets" Condition="Exists('packages\curl.redist.7.30.0.2\build\native\curl.redist.targets')" />
    <Import Project="packages\libssh2.redist.1.4.3.1\build\native\libssh2.redist.targets" Condition="Exists('packages\libssh2.redist.1.4.3.1\build\native\libssh2.redist.targets')" />
    <Import Project="packages\openssl.redist.1.0.1.21\build\native\openssl.redist.targets" Condition="Exists('packages\openssl.redist.1.0.1.21\build\native\openssl.redist.targets')" />
    <Import Project="packages\zlib.redist.1.2.8.1\build\native\zlib.redist.targets" Condition="Exists('packages\zlib.redist.1.2.8.1\build\native\zlib.redist.targets')" />
    <Import Project="packages\zlib.1.2.8.1\build\native\zlib.targets" Condition="Exists('packages\zlib.1.2.8.1\build\native\zlib.targets')" />
    <Import Project="packages\openssl.1.0.1.21\build\native\openssl.targets" Condition="Exists('packages\openssl.1.0.1.21\build\native\openssl.targets')" />
    <Import Project="packages\libssh2.1.4.3.1\build\native\libssh2.targets" Condition="Exists('packages\libssh2.1.4.3.1\build\native\libssh2.targets')" />
    <Import Project="packages\curl.7.30.0.2\build\native\curl.targets" Condition="Exists('packages\curl.7.30.0.2\build\native\curl.targets')" />
    <Import Project="packages\curlpp.redist.0.7.3.1\build\native\curlpp.redist.targets" Condition="Exists('packages\curlpp.redist.0.7.3.1\build\native\curlpp.redist.targets')" />
    <Import Project="packages\curlpp.0.7.3.1\build\native\curlpp.targets" Condition="Exists('packages\curlpp.0.7.3.1\build\native\curlpp.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>Данный проект ссылается на пакеты NuGet, отсутствующие на этом компьютере. Используйте восстановление пакетов NuGet, чтобы скачать их.  Дополнительную информацию см. по адресу: http://go.microsoft.com/fwlink/?LinkID=322105. Отсутствует следующий файл: {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\pthreads.redist.2.9.1.4\build\native\pthreads.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\pthreads.redist.2.9.1.4\build\native\pthreads.redist.targets'))" />
    <Error Condition="!Exists('packages\pthreads.2.9.1.4\build\native\pthreads.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\pthreads.2.9.1.4\build\native\pthreads.targets'))" />
    <Error Condition="!Exists('packages\curl.redist.7.30.0.2\build\native\curl.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\curl.redist.7.30.0.2\build\native\curl.redist.targets'))" />
    <Error Condition="!Exists('packages\libssh2.redist.1.4.3.1\build\native\libssh2.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\libssh2.redist.1.4.3.1\build\native\libssh2.redist.targets'))" />
    <Error Condition="!Exists('packages\openssl.redist.1.0.1.21\build\native\openssl.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\openssl.redist.1.0.1.21\build\native\openssl.redist.targets'))" />
    <Error Condition="!Exists('packages\zlib.redist.1.2.8.1\build\native\zlib.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\zlib.redist.1.2.8.1\build\native\zlib.redist.targets'))" />
    <Error Condition="!Exists('packages\zlib.1.2.8.1\build\native\zlib.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\zlib.1.2.8.1\build\native\zlib.targets'))" />
    <Error Condition="!Exists('packages\openssl.1.0.1.21\build\native\openssl.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\openssl.1.0.1.21\build\native\openssl.props'))" />
    <Error Condition="!Exists('packages\openssl.1.0.1.21\build\native\openssl.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\openssl.1.0.1.21\build\native\openssl.targets'))" />
    <Error Condition="!Exists('packages\libssh2.1.4.3.1\build\native\libssh2.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\libssh2.1.4.3.1\build\native\libssh2.targets'))" />
    <Error Condition="!Exists('packages\curl.7.30.0.2\build\native\curl.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\curl.7.30.0.2\build\native\curl.targets'))" />
    <Error Condition="!Exists('packages\curlpp.redist.0.7.3.1\build\native\curlpp.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\curlpp.redist.0.7.3.1\build\native\curlpp.redist.targets'))" />
    <Error Condition="!Exists('packages\curlpp.0.7.3.1\build\native\curlpp.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\curlpp.0.7.3.1\build\native\curlpp.targets'))" />
  </Target>
</Project>